/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projeto.individual.isaias;

import com.google.common.collect.ComputationException;
import java.util.List;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.Timer;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 *
 * @author Isaias Resende
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblResposta = new javax.swing.JLabel();
        iptEmail = new javax.swing.JTextField();
        iptSenha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnConecta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblResposta.setText("Resultado");

        iptEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptEmailActionPerformed(evt);
            }
        });

        iptSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptSenhaActionPerformed(evt);
            }
        });

        jLabel2.setText("Senha");

        jLabel3.setText("Email");

        btnConecta.setText("Conectar");
        btnConecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(lblResposta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnConecta)
                            .addComponent(iptEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(iptSenha))))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iptEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iptSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnConecta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblResposta)
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iptEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptEmailActionPerformed

    }//GEN-LAST:event_iptEmailActionPerformed

    private void iptSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptSenhaActionPerformed

    private void btnConectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectaActionPerformed

        ConexaoBancoLocal conexaoLocal = new ConexaoBancoLocal();
        ConexaoBancoNuvem conexaoNuvem = new ConexaoBancoNuvem();

        JdbcTemplate conLocal = conexaoLocal.getbanco();
        JdbcTemplate conNuvem = conexaoNuvem.getBancoNuvem();

        Componentes compMaquina = new Componentes();
        LogAcesso log = new LogAcesso();

        String emailDigitado = iptEmail.getText();
        String senhaDigitada = iptSenha.getText();

        List<Funcionario> ListaDeFuncionarios = conNuvem.query("select Funcionario.idFuncionario, Funcionario.email,Funcionario.senha,Funcionario.idEmpresa from Funcionario;",
                new BeanPropertyRowMapper(Funcionario.class));

        for (Funcionario funcionarioDaVez : ListaDeFuncionarios) {

            if (funcionarioDaVez.getEmail().equals(emailDigitado) && funcionarioDaVez.getSenha().equals(senhaDigitada)) {
                lblResposta.setText("Certo");

                String selectComputador = "select idComputador, idEmpresa from Computador where idEmpresa = ? and MacAddress = ?";
                List<Computador> computadoresLogadosAzure = conNuvem.query(selectComputador, new BeanPropertyRowMapper<>(Computador.class), funcionarioDaVez.getIdEmpresa(), compMaquina.macAddress());
                //List<Computador> computadoresLogadosMySql = conMySql.query(selectComputador, new BeanPropertyRowMapper<>(Computador.class), usuarioLogadoMySql.getIdEmpresa(), api.macAddress());

                if (computadoresLogadosAzure.isEmpty()) {
                    System.out.println("vamos cadastrar esse  computador");

                    conNuvem.update(String.format("insert into Computador (sistema_operacional, modelo, MacAddress, total_memoria, total_armazenamento, idEmpresa) values ('%s','%s','%s','%s','%s',%d)", compMaquina.sistemaOperacional(), compMaquina.modeloProcessador(), compMaquina.macAddress(), compMaquina.totalMemoria(), compMaquina.totalDisco(), funcionarioDaVez.getIdEmpresa()));
                    log.inserirLoginBanco(funcionarioDaVez, computadoresLogadosAzure.get(0));
                    System.out.println("Cadastrei os computadores!!");

                } else {
                    System.out.println("computador já estava cadastrado");
                    log.inserirLoginBanco(funcionarioDaVez, computadoresLogadosAzure.get(0));
                }

                System.out.println("COMEÇAR A REGISTRAR DADOS A CADA X SEGUNDOS");

                ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
                executor.scheduleAtFixedRate(() -> {

                    //ConexaoBancoLocal conexaoLocal = new ConexaoBancoLocal();
                    String selectComputador1 = "select Computador.idComputador, Computador.idEmpresa from Computador where idEmpresa = ? and MacAddress = ?";

                    Computador computadorLogadoAzure = conNuvem.queryForObject(selectComputador1, new BeanPropertyRowMapper<>(Computador.class), funcionarioDaVez.getIdEmpresa(), compMaquina.macAddress());
                    //  Computador computadorLogadoMysql = conLocal.queryForObject(selectComputador1, new BeanPropertyRowMapper<>(Computador.class), funcionarioDaVez.getIdEmpresa(), compMaquina.macAddress());
                    System.out.println(computadorLogadoAzure);
                    try {
                        compMaquina.inserirDadosAzure(computadorLogadoAzure);
                        compMaquina.inserirDadosMySql();
                        //api.inserirDadosMySql(computadorLogadoMySql);'
                        System.out.println("INSERINDO !!");
                    } catch (Exception e) {
                        System.out.println(e);
                        System.out.println("Erro ao inserir dados");
                    }

                }, 0, 20, TimeUnit.SECONDS);

            } else {

            }
        }

    }//GEN-LAST:event_btnConectaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConecta;
    private javax.swing.JTextField iptEmail;
    private javax.swing.JTextField iptSenha;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblResposta;
    // End of variables declaration//GEN-END:variables
}
